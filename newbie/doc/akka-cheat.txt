
SOO SCALA NEWBIE!:
http://www.scala-lang.org/documentation/getting-started.html
http://stackoverflow.com/questions/11667630/difference-between-using-app-trait-and-main-method-in-scala

=======================
1.1) StackOverflow:  What do all of Scala's symbolic operators mean?
                     Jim McBeath:  Actor Operator cheat sheet
! (“tell”) – sends the message and returns immediately
? (“ask”)  – sends the message and returns a Future representing a possible reply
~ ("parser") - composes two parsers into another parser that sequentially calls ...
~> ("graph edge") - edge connecting Graph!
========================

AKKA-SCALA HERE:
https://medium.com/@kvnwbbr/a-journey-into-reactive-streams-5ee2a9cd7e29#.uf5g7h512
https://medium.com/@kvnwbbr/diving-into-akka-streams-2770b3aeabb0#.v7go3rk73
https://www.toptal.com/scala/concurrency-and-fault-tolerance-made-easy-an-intro-to-akka
http://boldradius.com/blog-post/VS0NpTAAADAACs_E/introduction-to-akka-streams
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-quickstart.html
http://blog.akka.io/streams/2016/07/06/threading-and-concurrency-in-akka-streams-explained
http://stackoverflow.com/questions/35120082/how-to-get-started-with-akka-streams
http://doc.akka.io/docs/akka/2.4.8/scala/stream/index.html
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-cookbook.html#logging-elements-of-a-stream
http://markatta.com/codemonkey/blog/2016/04/18/chat-with-akka-http-websockets/
https://www.youtube.com/watch?v=oS9w3VenDW0   (AKKA STREAMS)

http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-flows-and-basics.html
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-graphs.html
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-cookbook.html#logging-elements-of-a-stream
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-error.html
http://doc.akka.io/docs/akka/2.4.8/scala/stream/stream-testkit.html